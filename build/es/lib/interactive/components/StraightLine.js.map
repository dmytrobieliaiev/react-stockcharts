{"version":3,"sources":["../../../../../src/lib/interactive/components/StraightLine.js"],"names":["React","Component","PropTypes","GenericChartComponent","getMouseCanvas","isDefined","noop","hexToRGBA","getStrokeDasharray","strokeDashTypes","StraightLine","props","renderSVG","bind","drawOnCanvas","isHover","element","addEventListener","onSelect","removeEventListener","moreProps","tolerance","onHover","x1Value","x2Value","y1Value","y2Value","type","mouseXY","xScale","yScale","chartConfig","hovering","isHovering","ctx","stroke","strokeWidth","strokeOpacity","strokeDasharray","helper","x1","y1","x2","y2","lineWidth","strokeStyle","setLineDash","split","beginPath","moveTo","lineTo","ref","selected","interactiveCursorClass","onDragStart","onDrag","onDragComplete","onUnHover","onClick","isHovering2","start","end","mouseX","mouseY","m","getSlope","b","getYIntercept","y","Math","min","max","line","generateLine","modLine","undefined","getXLineCoordinates","getRayCoordinates","getLineCoordinates","domain","xBegin","xFinish","yBegin","yFinish","propTypes","any","isRequired","string","number","oneOf","onEdge1Drag","func","onEdge2Drag","defaultClassName","r","edgeFill","edgeStroke","edgeStrokeWidth","withEdge","bool","children","defaultProps"],"mappings":"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","file":"StraightLine.js","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport GenericChartComponent from \"../../GenericChartComponent\";\nimport { getMouseCanvas } from \"../../GenericComponent\";\n\nimport {\n\tisDefined,\n\tnoop,\n\thexToRGBA,\n\tgetStrokeDasharray,\n\tstrokeDashTypes,\n} from \"../../utils\";\n\nclass StraightLine extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.renderSVG = this.renderSVG.bind(this);\n\t\tthis.drawOnCanvas = this.drawOnCanvas.bind(this);\n\t\tthis.isHover = this.isHover.bind(this);\n\t}\n\tcomponentDidMount() {\n\t\tif (this.element) {\n\t\t\tthis.element.addEventListener(\"click\", this.props.onSelect);\n\t\t}\n\t}\n\n\tcomponentWillUnmount() {\n\t\tif (this.element) {\n\t\t\tthis.element.removeEventListener(\"click\", this.props.onSelect);\n\t\t}\n\t}\n\tisHover(moreProps) {\n\t\tconst { tolerance, onHover } = this.props;\n\n\t\tif (isDefined(onHover)) {\n\t\t\tconst { x1Value, x2Value, y1Value, y2Value, type } = this.props;\n\t\t\tconst { mouseXY, xScale } = moreProps;\n\t\t\tconst { chartConfig: { yScale } } = moreProps;\n\n\t\t\tconst hovering = isHovering({\n\t\t\t\tx1Value, y1Value,\n\t\t\t\tx2Value, y2Value,\n\t\t\t\tmouseXY,\n\t\t\t\ttype,\n\t\t\t\ttolerance,\n\t\t\t\txScale,\n\t\t\t\tyScale,\n\t\t\t});\n\n\t\t\t// console.log(\"hovering ->\", hovering);\n\n\t\t\treturn hovering;\n\t\t}\n\t\treturn false;\n\t}\n\tdrawOnCanvas(ctx, moreProps) {\n\t\tconst { stroke, strokeWidth, strokeOpacity, strokeDasharray } = this.props;\n\t\tconst { x1, y1, x2, y2 } = helper(this.props, moreProps);\n\n\t\tctx.lineWidth = strokeWidth;\n\t\tctx.strokeStyle = hexToRGBA(stroke, strokeOpacity);\n\t\tctx.setLineDash(getStrokeDasharray(strokeDasharray).split(\",\"));\n\n\t\tctx.beginPath();\n\t\tctx.moveTo(x1, y1);\n\t\tctx.lineTo(x2, y2);\n\t\tctx.stroke();\n\t}\n\trenderSVG(moreProps) {\n\t\tconst { stroke, strokeWidth, strokeOpacity, strokeDasharray } = this.props;\n\n\t\tconst lineWidth = strokeWidth;\n\n\t\tconst { x1, y1, x2, y2 } = helper(this.props, moreProps);\n\t\treturn (\n\t\t\t<line\n\t\t\t\tref={ref => this.element = ref}\n\t\t\t\tx1={x1} y1={y1} x2={x2} y2={y2}\n\t\t\t\tstroke={stroke} strokeWidth={lineWidth}\n\t\t\t\tstrokeDasharray={getStrokeDasharray(strokeDasharray)}\n\t\t\t\tstrokeOpacity={strokeOpacity} />\n\t\t);\n\t}\n\trender() {\n\t\tconst { selected, interactiveCursorClass } = this.props;\n\t\tconst { onDragStart, onDrag, onDragComplete, onHover, onUnHover, onClick } = this.props;\n\n\t\treturn <GenericChartComponent\n\t\t\tisHover={this.isHover}\n\n\t\t\tsvgDraw={this.renderSVG}\n\t\t\tcanvasToDraw={getMouseCanvas}\n\t\t\tcanvasDraw={this.drawOnCanvas}\n\n\t\t\tinteractiveCursorClass={interactiveCursorClass}\n\t\t\tselected={selected}\n\n\t\t\tonClickWhenHover={onClick}\n\t\t\tonDragStart={onDragStart}\n\t\t\tonDrag={onDrag}\n\t\t\tonDragComplete={onDragComplete}\n\t\t\tonHover={onHover}\n\t\t\tonUnHover={onUnHover}\n\n\t\t\tdrawOn={[\"mousemove\", \"pan\", \"drag\"]}\n\t\t/>;\n\t}\n}\n\nexport function isHovering2(start, end, [mouseX, mouseY], tolerance) {\n\tconst m = getSlope(start, end);\n\n\tif (isDefined(m)) {\n\t\tconst b = getYIntercept(m, end);\n\t\tconst y = m * mouseX + b;\n\t\treturn (mouseY < y + tolerance)\n\t\t\t&& mouseY > (y - tolerance)\n\t\t\t&& mouseX > Math.min(start[0], end[0]) - tolerance\n\t\t\t&& mouseX < Math.max(start[0], end[0]) + tolerance;\n\t} else {\n\t\treturn mouseY >= Math.min(start[1], end[1])\n\t\t\t&& mouseY <= Math.max(start[1], end[1])\n\t\t\t&& mouseX < start[0] + tolerance\n\t\t\t&& mouseX > start[0] - tolerance;\n\t}\n}\n\nexport function isHovering({\n\tx1Value, y1Value,\n\tx2Value, y2Value,\n\tmouseXY,\n\ttype,\n\ttolerance,\n\txScale,\n\tyScale,\n}) {\n\n\tconst line = generateLine({\n\t\ttype,\n\t\tstart: [x1Value, y1Value],\n\t\tend: [x2Value, y2Value],\n\t\txScale,\n\t\tyScale,\n\t});\n\n\tconst start = [xScale(line.x1), yScale(line.y1)];\n\tconst end = [xScale(line.x2), yScale(line.y2)];\n\n\tconst m = getSlope(start, end);\n\tconst [mouseX, mouseY] = mouseXY;\n\n\tif (isDefined(m)) {\n\t\tconst b = getYIntercept(m, end);\n\t\tconst y = m * mouseX + b;\n\n\t\treturn mouseY < (y + tolerance)\n\t\t\t&& mouseY > (y - tolerance)\n\t\t\t&& mouseX > Math.min(start[0], end[0]) - tolerance\n\t\t\t&& mouseX < Math.max(start[0], end[0]) + tolerance;\n\t} else {\n\t\treturn mouseY >= Math.min(start[1], end[1])\n\t\t\t&& mouseY <= Math.max(start[1], end[1])\n\t\t\t&& mouseX < start[0] + tolerance\n\t\t\t&& mouseX > start[0] - tolerance;\n\t}\n}\n\nfunction helper(props, moreProps) {\n\tconst { x1Value, x2Value, y1Value, y2Value, type } = props;\n\n\tconst { xScale, chartConfig: { yScale } } = moreProps;\n\n\tconst modLine = generateLine({\n\t\ttype,\n\t\tstart: [x1Value, y1Value],\n\t\tend: [x2Value, y2Value],\n\t\txScale,\n\t\tyScale,\n\t});\n\n\tconst x1 = xScale(modLine.x1);\n\tconst y1 = yScale(modLine.y1);\n\tconst x2 = xScale(modLine.x2);\n\tconst y2 = yScale(modLine.y2);\n\n\treturn {\n\t\tx1, y1, x2, y2\n\t};\n}\n\nexport function getSlope(start, end) {\n\tconst m /* slope */ = end[0] === start[0]\n\t\t? undefined\n\t\t: (end[1] - start[1]) / (end[0] - start[0]);\n\treturn m;\n}\nexport function getYIntercept(m, end) {\n\tconst b /* y intercept */ = -1 * m * end[0] + end[1];\n\treturn b;\n}\n\nexport function generateLine({\n\ttype, start, end, xScale, yScale\n}) {\n\tconst m /* slope */ = getSlope(start, end);\n\t// console.log(end[0] - start[0], m)\n\tconst b /* y intercept */ = getYIntercept(m, start);\n\n\tswitch (type) {\n\t\tcase \"XLINE\":\n\t\t\treturn getXLineCoordinates({\n\t\t\t\ttype, start, end, xScale, yScale, m, b\n\t\t\t});\n\t\tcase \"RAY\":\n\t\t\treturn getRayCoordinates({\n\t\t\t\ttype, start, end, xScale, yScale, m, b\n\t\t\t});\n\t\tcase \"LINE\":\n\t\t\treturn getLineCoordinates({\n\t\t\t\ttype, start, end, xScale, yScale, m, b\n\t\t\t});\n\t}\n}\n\nfunction getXLineCoordinates({\n\tstart, end, xScale, yScale, m, b\n}) {\n\tconst [xBegin, xFinish] = xScale.domain();\n\tconst [yBegin, yFinish] = yScale.domain();\n\n\tif (end[0] === start[0]) {\n\t\treturn {\n\t\t\tx1: end[0], y1: yBegin,\n\t\t\tx2: end[0], y2: yFinish,\n\t\t};\n\t}\n\tconst [x1, x2] = end[0] > start[0]\n\t\t? [xBegin, xFinish]\n\t\t: [xFinish, xBegin];\n\n\treturn {\n\t\tx1, y1: m * x1 + b,\n\t\tx2, y2: m * x2 + b\n\t};\n}\n\nfunction getRayCoordinates({\n\tstart, end, xScale, yScale, m, b\n}) {\n\tconst [xBegin, xFinish] = xScale.domain();\n\tconst [yBegin, yFinish] = yScale.domain();\n\n\tconst x1 = start[0];\n\tif (end[0] === start[0]) {\n\t\treturn {\n\t\t\tx1,\n\t\t\ty1: start[1],\n\t\t\tx2: x1,\n\t\t\ty2: end[1] > start[1] ? yFinish : yBegin,\n\t\t};\n\t}\n\n\tconst x2 = end[0] > start[0]\n\t\t? xFinish\n\t\t: xBegin;\n\n\treturn {\n\t\tx1, y1: m * x1 + b,\n\t\tx2, y2: m * x2 + b\n\t};\n}\n\nfunction getLineCoordinates({\n\tstart, end\n}) {\n\n\tconst [x1, y1] = start;\n\tconst [x2, y2] = end;\n\tif (end[0] === start[0]) {\n\t\treturn {\n\t\t\tx1,\n\t\t\ty1: start[1],\n\t\t\tx2: x1,\n\t\t\ty2: end[1],\n\t\t};\n\t}\n\n\treturn {\n\t\tx1, y1,\n\t\tx2, y2,\n\t};\n}\n\nStraightLine.propTypes = {\n\tx1Value: PropTypes.any.isRequired,\n\tx2Value: PropTypes.any.isRequired,\n\ty1Value: PropTypes.any.isRequired,\n\ty2Value: PropTypes.any.isRequired,\n\n\tinteractiveCursorClass: PropTypes.string,\n\tstroke: PropTypes.string.isRequired,\n\tstrokeWidth: PropTypes.number.isRequired,\n\tstrokeOpacity: PropTypes.number.isRequired,\n\tstrokeDasharray: PropTypes.oneOf(strokeDashTypes),\n\n\ttype: PropTypes.oneOf([\n\t\t\"XLINE\", // extends from -Infinity to +Infinity\n\t\t\"RAY\", // extends to +/-Infinity in one direction\n\t\t\"LINE\", // extends between the set bounds\n\t]).isRequired,\n\n\tonEdge1Drag: PropTypes.func.isRequired,\n\tonEdge2Drag: PropTypes.func.isRequired,\n\tonDragStart: PropTypes.func.isRequired,\n\tonClick: PropTypes.func.isRequired,\n\tonDrag: PropTypes.func.isRequired,\n\tonDragComplete: PropTypes.func.isRequired,\n\tonHover: PropTypes.func,\n\tonUnHover: PropTypes.func,\n\tonSelect: PropTypes.func,\n\n\tdefaultClassName: PropTypes.string,\n\n\tr: PropTypes.number.isRequired,\n\tedgeFill: PropTypes.string.isRequired,\n\tedgeStroke: PropTypes.string.isRequired,\n\tedgeStrokeWidth: PropTypes.number.isRequired,\n\twithEdge: PropTypes.bool.isRequired,\n\tchildren: PropTypes.func.isRequired,\n\ttolerance: PropTypes.number.isRequired,\n\tselected: PropTypes.bool.isRequired,\n};\n\nStraightLine.defaultProps = {\n\tonEdge1Drag: noop,\n\tonEdge2Drag: noop,\n\tonDragStart: noop,\n\tonDrag: noop,\n\tonDragComplete: noop,\n\tonClick: noop,\n\tonSelect: noop,\n\n\tedgeStrokeWidth: 3,\n\tedgeStroke: \"#000000\",\n\tedgeFill: \"#FFFFFF\",\n\tr: 10,\n\twithEdge: false,\n\tstrokeWidth: 1,\n\tstrokeDasharray: \"Solid\",\n\tchildren: noop,\n\ttolerance: 7,\n\tselected: false,\n};\n\nexport default StraightLine;\n"]}