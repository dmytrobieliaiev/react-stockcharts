{"version":3,"sources":["../../../../src/lib/coordinates/EdgeIndicator.js"],"names":["React","Component","PropTypes","format","drawOnCanvas","renderSVG","GenericChartComponent","getAxisCanvas","first","last","isDefined","functor","noop","strokeDashTypes","settings","EdgeIndicator","props","bind","ctx","moreProps","edge","helper","propTypes","yAccessor","func","type","oneOf","className","string","fill","oneOfType","lineStroke","textFill","itemType","isRequired","orient","edgeAt","displayFormat","rectHeight","number","rectWidth","arrowWidth","lineStrokeDasharray","defaultProps","yAxisPad","fontFamily","fontSize","fontSizeBig","dx","hideLine","opacity","stroke","strokeOpacity","strokeWidth","lineOpacity","plotData","item","getEdge","edgeType","xScale","yScale","chartConfig","xAccessor","width","yValue","xValue","x1","Math","round","y1","left","right","edgeX","coordinate","show","x2","y2"],"mappings":"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","file":"EdgeIndicator.js","sourcesContent":["\n\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { format } from \"d3-format\";\n\nimport { drawOnCanvas, renderSVG } from \"./EdgeCoordinateV3\";\nimport GenericChartComponent from \"../GenericChartComponent\";\nimport { getAxisCanvas } from \"../GenericComponent\";\n\nimport { first, last, isDefined, functor, noop, strokeDashTypes } from \"../utils\";\nimport settings from \"../../settings\";\n\nclass EdgeIndicator extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.renderSVG = this.renderSVG.bind(this);\n\t\tthis.drawOnCanvas = this.drawOnCanvas.bind(this);\n\t}\n\tdrawOnCanvas(ctx, moreProps) {\n\t\tconst edge = helper(this.props, moreProps);\n\t\tconst props = {\n\t\t\t...this.props,\n\t\t\t...edge,\n\t\t};\n\t\tdrawOnCanvas(ctx, props);\n\t}\n\trenderSVG(moreProps) {\n\t\tconst edge = helper(this.props, moreProps);\n\t\tconst props = {\n\t\t\t...this.props,\n\t\t\t...edge,\n\t\t};\n\t\treturn renderSVG(props);\n\t}\n\trender() {\n\t\treturn <GenericChartComponent\n\t\t\tedgeClip\n\t\t\tclip={false}\n\t\t\tsvgDraw={this.renderSVG}\n\t\t\tcanvasDraw={this.drawOnCanvas}\n\t\t\tcanvasToDraw={getAxisCanvas}\n\t\t\tdrawOn={[\"pan\"]}\n\t\t/>;\n\t}\n}\n\nEdgeIndicator.propTypes = {\n\tyAccessor: PropTypes.func,\n\n\ttype: PropTypes.oneOf([\"horizontal\"]),\n\tclassName: PropTypes.string,\n\tfill: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.func,\n\t]),\n\tlineStroke: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.func,\n\t]),\n\ttextFill: PropTypes.oneOfType([\n\t\tPropTypes.string,\n\t\tPropTypes.func,\n\t]),\n\titemType: PropTypes.oneOf([\"first\", \"last\"]).isRequired,\n\torient: PropTypes.oneOf([\"left\", \"right\"]),\n\tedgeAt: PropTypes.oneOf([\"left\", \"right\"]),\n\tdisplayFormat: PropTypes.func,\n\trectHeight: PropTypes.number,\n\trectWidth: PropTypes.number,\n\tarrowWidth: PropTypes.number,\n\tlineStrokeDasharray: PropTypes.oneOf(strokeDashTypes),\n};\n\nEdgeIndicator.defaultProps = {\n\tclassName: \"react-stockcharts-edgeindicator\",\n\n\ttype: \"horizontal\",\n\torient: \"left\",\n\tedgeAt: \"left\",\n\ttextFill: \"#FFFFFF\",\n\tdisplayFormat: format(\".2f\"),\n\tyAxisPad: 0,\n\trectHeight: 20,\n\trectWidth: 50,\n\tarrowWidth: 10,\n\tfontFamily: settings.fontFamily,\n\tfontSize: settings.fontSizeBig,\n\tdx: 0,\n\thideLine: false,\n\tfill: \"#8a8a8a\",\n\topacity: 1,\n\n\tstroke: noop,\n\tstrokeOpacity: 1,\n\tstrokeWidth: 3,\n\tlineStroke: \"#000000\",\n\tlineOpacity: 0.3,\n\tlineStrokeDasharray: \"ShortDash\",\n};\n\nfunction helper(props, moreProps) {\n\tconst { itemType, yAccessor } = props;\n\tconst { plotData } = moreProps;\n\n\tconst item = itemType === \"first\"\n\t\t? first(plotData, yAccessor)\n\t\t: last(plotData, yAccessor);\n\n\t// var currentItem = ChartDataUtil.getCurrentItemForChartNew(currentItems, forChart);\n\tconst edge = isDefined(item)\n\t\t? getEdge(props, moreProps, item)\n\t\t: null;\n\n\treturn edge;\n}\n\nfunction getEdge(props, moreProps, item) {\n\tconst { type: edgeType, displayFormat, edgeAt, yAxisPad, orient, lineStroke } = props;\n\n\tconst { yAccessor, fill, textFill, rectHeight, rectWidth, arrowWidth } = props;\n\tconst { fontFamily, fontSize } = props;\n\tconst { stroke } = props;\n\n\tconst { xScale, chartConfig: { yScale }, xAccessor, width } = moreProps;\n\n\tconst yValue = yAccessor(item),\n\t\txValue = xAccessor(item);\n\n\tconst x1 = Math.round(xScale(xValue)),\n\t\ty1 = Math.round(yScale(yValue));\n\n\tconst [left, right] = [0, width];\n\tconst edgeX = edgeAt === \"left\"\n\t\t? left - yAxisPad\n\t\t: right + yAxisPad;\n\n\treturn {\n\t\t// ...props,\n\t\tcoordinate: displayFormat(yValue),\n\t\tshow: true,\n\t\ttype: edgeType,\n\t\torient,\n\t\tedgeAt: edgeX,\n\t\tfill: functor(fill)(item),\n\t\tlineStroke: functor(lineStroke)(item),\n\t\tstroke: functor(stroke)(item),\n\t\tfontFamily, fontSize,\n\t\ttextFill: functor(textFill)(item),\n\t\trectHeight, rectWidth, arrowWidth,\n\t\tx1,\n\t\ty1,\n\t\tx2: right,\n\t\ty2: y1,\n\t};\n}\n\nexport default EdgeIndicator;\n"]}